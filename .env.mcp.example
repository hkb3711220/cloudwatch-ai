# CloudWatch MCP Server Environment Configuration (Direct Integration)
# Copy this file to .env and fill in your actual AWS credentials and settings

# ===============================
# AWS Configuration
# ===============================

# Option 1: Use AWS Profile (Recommended for development)
AWS_PROFILE=default
AWS_REGION=ap-northeast-1

# Option 2: Use explicit AWS credentials (for production/CI)
# AWS_ACCESS_KEY_ID=your_access_key_here
# AWS_SECRET_ACCESS_KEY=your_secret_key_here
# AWS_SESSION_TOKEN=your_session_token_here  # Only needed for temporary credentials

# ===============================
# MCP Server Configuration
# ===============================
# Note: Use MCP_SERVER__ prefix for nested server configuration

# Server settings
MCP_SERVER__NAME=CloudWatch Logs MCP Server
MCP_SERVER__VERSION=0.3.0
# Transport options: stdio, sse, streamable-http
MCP_SERVER__TRANSPORT=stdio
MCP_SERVER__HOST=localhost
MCP_SERVER__PORT=8000

# Note: Performance and development settings removed as they were not used in the codebase

# ===============================
# Logging Configuration
# ===============================

LOG_LEVEL=INFO  # DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s

# ===============================
# Configuration File (Optional)
# ===============================

# Path to JSON configuration file (optional, overrides some env vars)
# MCP_CONFIG_FILE=.mcp_config.json

# ===============================
# Development/Testing
# ===============================

# Enable verbose logging for specific modules
# PYTHONPATH=.
# MCP_LOG_BOTO3=WARNING
# MCP_LOG_URLLIB3=WARNING

# ===============================
# Transport Configuration Examples
# ===============================

# Example 1: STDIO Transport (Default - for MCP clients like Cursor)
# MCP_SERVER__TRANSPORT=stdio

# Example 2: SSE Transport (Server-Sent Events)
# MCP_SERVER__TRANSPORT=sse
# MCP_SERVER__HOST=localhost
# MCP_SERVER__PORT=8000

# Example 3: HTTP Transport (Streamable HTTP)
# MCP_SERVER__TRANSPORT=streamable-http
# MCP_SERVER__HOST=localhost
# MCP_SERVER__PORT=8000

# ===============================
# Notes
# ===============================

# This MCP server now uses direct CloudWatch integration with configurable transport.
# Only AWS credentials are required for CloudWatch access.
# 
# Available MCP Tools (10 total):
# 
# CloudWatch Logs Tools (6):
# - investigate_cloudwatch_logs: Direct log investigation using AWS APIs
# - list_available_log_groups: List CloudWatch log groups
# - analyze_log_patterns: Analyze log patterns and trends
# - test_connection: Test AWS CloudWatch connection
# - get_log_streams: Get log streams for a specific log group
# - get_recent_events: Get recent log events from a specific stream
#
# CloudWatch Metrics Tools (2):
# - investigate_cloudwatch_metrics: CloudWatch metrics detailed investigation
# - list_available_metrics: List available metrics
#
# System Management Tools (2):
# - get_request_metrics: MCP server request metrics
# - get_active_requests: Currently active request information
#
# Environment Variable Priority (highest to lowest):
# 1. External environment variables (MCP server env section, system env vars)
# 2. .env.{profile} files (profile-specific settings)
# 3. .env files (local override settings)  
# 4. .env.cloudwatch files (base configuration)
#
# For Cursor MCP integration, add these environment variables to .cursor/mcp.json:
# {
#   "mcpServers": {
#     "cloudwatch-logs": {
#       "command": "uv",
#       "args": ["run", "python", "run_mcp_server.py"],
#       "cwd": "/path/to/cloudwatch-log-agent",
#       "env": {
#         "AWS_PROFILE": "your-aws-profile",
#         "AWS_REGION": "your-aws-region",
#         "MCP_SERVER__TRANSPORT": "stdio"
#       }
#     }
#   }
# } 